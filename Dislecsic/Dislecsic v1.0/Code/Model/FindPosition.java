package Model;
import Controller.GameLoop;
import Util.Global;
import Util.Sec;

public class FindPosition
{
    public static double[][] forest = 
        { 
            {.00, .00, .00, .00, .00, .00, .00, .00, .00, .00, .00, .00, .00, .00, .00, .00, .00, .00, .00, .00, .00, .00, .00, .00, .00, .00, .00, .00, .00, .00, .00, .00, .00, .00},
            {.00, .00, .00, .00, .00, .00, .00, .00, .00, .00, .00, .00, .00, .00, .00, .44, .00, .00, .00, .00, .00, .00, .00, .00, .00, .00, .00, .00, .00, .00, .00, .00, .00, .00},
            {.00, .00, .00, .00, .00, .00, .00, .00, .00, .00, .00, .13, .18, .18, .18, .18, .18, .18, .18, .14, .00, .00, .00, .00, .00, .00, .00, .00, .00, .00, .00, .00, .00, .00},
            {.00, .00, .00, .00, .00, .00, .00, .00, .00, .00, .00, .20, .10, .10, .10, .10, .10, .10, .10, .19, .00, .00, .00, .00, .00, .00, .00, .00, .00, .00, .00, .00, .00, .00},            
            {.00, .00, .00, .00, .00, .00, .00, .00, .00, .00, .00, .20, .10, .10, .10, .10, .10, .10, .10, .19, .00, .00, .00, .00, .00, .00, .00, .00, .00, .00, .00, .00, .00, .00},
            {.00, .00, .00, .00, .00, .00, .00, .00, .00, .00, .00, .20, .10, .10, .10, .10, .10, .10, .10, .19, .00, .00, .00, .00, .00, .00, .00, .00, .00, .00, .00, .00, .00, .00},
            {.00, .00, .00, .00, .00, .00, .00, .00, .00, .00, .00, .57, .57, .57, .57, .57, .57, .57, .57, .57, .00, .00, .00, .00, .00, .00, .00, .00, .00, .00, .00, .00, .00, .00},
            {.00, .00, .00, .00, .00, .00, .00, .00, .00, .00, .00, .20, .10, .10, .10, .10, .10, .10, .10, .19, .00, .00, .00, .00, .00, .00, .00, .00, .00, .00, .00, .00, .00, .00},
            {.00, .00, .00, .00, .00, .00, .00, .00, .00, .00, .00, .20, .63, .10, .10, .10, .10, .10, .63, .19, .00, .00, .00, .00, .00, .00, .00, .00, .00, .00, .00, .00, .00, .00},
            {.00, .00, .00, .00, .00, .00, .00, .00, .00, .00, .00, .20, .63, .10, .10, .10, .10, .10, .63, .19, .00, .00, .00, .00, .00, .00, .00, .00, .00, .00, .00, .00, .00, .00},
            {.00, .00, .00, .00, .00, .00, .00, .00, .00, .00, .00, .15, .17, .17, .17, .47, .17, .17, .17, .16, .00, .00, .00, .00, .00, .00, .00, .00, .00, .00, .00, .00, .00, .00},
            {.00, .00, .00, .00, .00, .00, .00, .00, .00, .00, .00, .00, .00, .00, .00, .11, .00, .00, .00, .00, .00, .00, .00, .00, .00, .00, .00, .00, .13, .18, .18, .18, .14, .00},
            {.00, .00, .00, .00, .00, .00, .00, .00, .00, .00, .00, .00, .00, .00, .00, .11, .00, .00, .00, .00, .00, .00, .00, .00, .00, .00, .00, .00, .20, .52, .63, .53, .19, .00},
            {.00, .00, .00, .00, .13, .18, .14, .00, .13, .18, .18, .18, .18, .14, .00, .11, .00, .00, .00, .00, .00, .13, .18, .18, .18, .18, .14, .00, .20, .10, .10, .10, .19, .00},
            {.00, .00, .00, .00, .20, .51, .10, .12, .10, .53, .10, .10, .53, .10, .12, .17, .12, .12, .18, .12, .12, .10, .53, .10, .10, .51, .10, .12, .10, .10, .63, .10, .19, .00},
            {.00, .00, .00, .00, .17, .10, .16, .00, .15, .17, .17, .17, .17, .16, .00, .00, .00, .00, .11, .00, .00, .15, .17, .17, .17, .17, .16, .00, .20, .51, .10, .53, .19, .00},
            {.00, .00, .00, .00, .00, .11, .00, .00, .00, .00, .00, .00, .00, .00, .00, .00, .00, .00, .11, .00, .00, .00, .00, .00, .00, .00, .00, .00, .20, .63, .10, .10, .19, .00},
            {.00, .00, .00, .00, .00, .11, .00, .00, .00, .00, .00, .00, .00, .00, .00, .00, .00, .13, .10, .14, .00, .00, .00, .00, .00, .00, .00, .00, .15, .17, .10, .17, .16, .00},
            {.00, .00, .00, .00, .00, .11, .00, .00, .00, .00, .00, .00, .00, .00, .00, .00, .00, .20, .53, .19, .00, .00, .00, .13, .18, .14, .00, .00, .00, .00, .11, .00, .00, .00},
            {.00, .00, .00, .00, .00, .11, .00, .00, .00, .00, .00, .00, .00, .00, .00, .00, .00, .15, .10, .16, .00, .00, .00, .20, .34, .19, .00, .00, .00, .00, .11, .00, .00, .00},
            {.00, .00, .00, .00, .00, .11, .00, .00, .00, .00, .00, .13, .18, .14, .00, .00, .00, .00, .11, .00, .00, .00, .00, .17, .53, .16, .00, .00, .00, .00, .11, .00, .00, .00},
            {.00, .00, .00, .00, .00, .11, .00, .00, .00, .00, .00, .20, .63, .19, .00, .00, .00, .00, .11, .00, .00, .00, .00, .00, .11, .00, .00, .00, .13, .12, .16, .00, .00, .00},
            {.00, .13, .18, .18, .18, .10, .18, .18, .18, .14, .00, .20, .35, .52, .12, .18, .12, .12, .16, .00, .00, .00, .00, .00, .11, .00, .00, .00, .11, .00, .00, .00, .00, .00},
            {.00, .20, .53, .10, .51, .63, .52, .10, .53, .19, .00, .20, .53, .19, .00, .11, .00, .00, .00, .00, .13, .18, .14, .00, .11, .00, .00, .00, .11, .00, .00, .00, .00, .00},
            {.00, .15, .10, .17, .17, .17, .17, .17, .17, .16, .00, .15, .17, .16, .00, .11, .00, .00, .00, .00, .20, .52, .10, .12, .17, .12, .12, .12, .19, .00, .00, .00, .00, .00},
            {.00, .00, .11, .00, .00, .00, .00, .00, .00, .00, .00, .00, .00, .00, .00, .11, .00, .00, .00, .00, .17, .10, .16, .00, .00, .00, .00, .00, .11, .00, .00, .00, .00, .00},
            {.00, .00, .11, .00, .00, .00, .00, .00, .00, .00, .00, .00, .00, .00, .00, .11, .00, .00, .00, .00, .00, .11, .00, .00, .00, .00, .00, .13, .10, .14, .00, .00, .00, .00},
            {.00, .00, .11, .00, .00, .00, .00, .00, .00, .00, .00, .00, .00, .13, .18, .10, .18, .14, .00, .00, .00, .11, .00, .00, .00, .00, .00, .20, .52, .19, .00, .00, .00, .00},
            {.00, .00, .11, .00, .00, .00, .00, .00, .00, .00, .00, .00, .00, .20, .63, .31, .10, .19, .00, .00, .00, .11, .00, .13, .18, .14, .00, .20, .10, .19, .00, .00, .00, .00},
            {.00, .00, .11, .00, .00, .00, .00, .00, .00, .00, .00, .00, .00, .20, .10, .51, .10, .19, .00, .00, .00, .20, .12, .10, .51, .10, .12, .10, .53, .19, .00, .00, .00, .00},
            {.00, .00, .11, .00, .00, .00, .00, .00, .00, .00, .00, .00, .00, .15, .17, .10, .17, .16, .00, .00, .00, .11, .00, .15, .17, .16, .00, .20, .10, .19, .00, .00, .00, .00},
            {.00, .00, .15, .12, .12, .12, .12, .12, .14, .00, .00, .00, .00, .00, .00, .11, .00, .00, .00, .00, .00, .11, .00, .00, .00, .00, .00, .20, .52, .19, .00, .00, .00, .00},
            {.00, .00, .00, .00, .00, .00, .00, .00, .11, .00, .00, .00, .00, .00, .00, .11, .00, .00, .00, .00, .00, .11, .00, .00, .00, .00, .00, .15, .17, .16, .00, .00, .00, .00},
            {.00, .00, .00, .00, .00, .00, .00, .13, .10, .14, .00, .13, .18, .14, .00, .11, .00, .00, .00, .00, .13, .10, .14, .00, .00, .00, .00, .00, .00, .00, .00, .00, .00, .00},
            {.00, .00, .00, .00, .00, .00, .00, .20, .32, .52, .12, .10, .51, .10, .12, .40, .12, .12, .12, .12, .51, .33, .19, .00, .00, .00, .00, .00, .00, .00, .00, .00, .00, .00},
            {.00, .00, .00, .00, .00, .00, .00, .15, .17, .16, .00, .15, .17, .16, .00, .11, .00, .00, .00, .00, .15, .17, .16, .00, .00, .00, .00, .00, .00, .00, .00, .00, .00, .00},
            {.00, .00, .00, .00, .00, .00, .00, .00, .00, .00, .00, .00, .00, .00, .00, .11, .00, .00, .00, .00, .00, .00, .00, .00, .00, .00, .00, .00, .00, .00, .00, .00, .00, .00},
            {.00, .00, .00, .00, .00, .00, .00, .00, .00, .00, .00, .00, .00, .00, .00, .99, .00, .00, .00, .00, .00, .00, .00, .00, .00, .00, .00, .00, .00, .00, .00, .00, .00, .00},
            {.00, .00, .00, .00, .00, .00, .00, .00, .00, .00, .00, .00, .00, .00, .00, .00, .00, .00, .00, .00, .00, .00, .00, .00, .00, .00, .00, .00, .00, .00, .00, .00, .00, .00},
        };

    public static double [][] cave = 
    {
        {.00, .00, .00, .00, .00, .00, .00, .00, .00, .00, .00, .00, .00, .00, .00, .00, .00, .00, .00, .00, .00, .00, .00, .00, .00, .00, .00, .00, .00, .00, .00, .00, .00, .00, .00, .00, .00},
        {.00, .00, .00, .00, .00, .00, .00, .00, .00, .00, .00, .00, .00, .00, .00, .00, .00, .00, .13, .18, .18, .18, .18, .14, .00, .00, .00, .00, .00, .00, .00, .00, .00, .00, .00, .00, .00},
        {.00, .00, .00, .00, .00, .00, .00, .00, .00, .00, .00, .00, .00, .00, .00, .00, .00, .00, .20, .52, .10, .10, .53, .19, .00, .00, .00, .00, .00, .00, .00, .00, .00, .00, .00, .00, .00},
        {.00, .00, .00, .00, .00, .00, .00, .00, .00, .00, .00, .00, .13, .18, .14, .00, .00, .00, .20, .10, .10, .10, .10, .19, .00, .00, .13, .18, .14, .00, .00, .00, .00, .00, .00, .00, .00},
        {.00, .00, .00, .00, .00, .00, .00, .00, .00, .00, .00, .00, .20, .33, .10, .12, .12, .12, .10, .10, .54, .10, .10, .10, .12, .12, .10, .63, .19, .00, .00, .00, .00, .00, .00, .00, .00},
        {.00, .00, .00, .00, .00, .00, .00, .00, .00, .00, .00, .00, .15, .17, .16, .00, .00, .00, .20, .10, .10, .63, .51, .19, .00, .00, .20, .53, .19, .00, .00, .00, .00, .00, .00, .00, .00},
        {.00, .00, .00, .00, .00, .00, .00, .00, .00, .00, .00, .00, .00, .00, .00, .00, .00, .00, .20, .54, .10, .10, .10, .19, .00, .00, .15, .10, .16, .00, .00, .00, .00, .00, .00, .00, .00},
        {.00, .00, .00, .13, .56, .18, .18, .14, .00, .00, .00, .00, .00, .00, .00, .00, .00, .00, .15, .10, .17, .17, .17, .16, .00, .00, .00, .11, .00, .00, .00, .00, .00, .00, .00, .00, .00},
        {.00, .00, .00, .20, .56, .10, .10, .19, .00, .00, .00, .00, .00, .00, .00, .00, .00, .00, .00, .11, .00, .00, .00, .00, .00, .00, .00, .11, .00, .00, .00, .00, .00, .00, .00, .00, .00},
        {.00, .00, .00, .20, .56, .10, .10, .19, .00, .00, .00, .13, .18, .18, .18, .14, .00, .00, .00, .11, .00, .00, .00, .00, .00, .00, .13, .18, .14, .00, .00, .13, .18, .14, .00, .00, .00},
        {.00, .44, .12, .10, .56, .10, .10, .10, .12, .12, .12, .10, .53, .63, .54, .10, .12, .12, .12, .16, .00, .00, .00, .00, .00, .00, .10, .54, .10, .12, .12, .10, .36, .10, .12, .43, .00},
        {.00, .00, .00, .20, .56, .10, .10, .19, .00, .00, .00, .15, .17, .10, .17, .16, .00, .00, .00, .00, .00, .00, .00, .00, .00, .00, .15, .17, .16, .00, .00, .15, .17, .16, .00, .00, .00},
        {.00, .00, .00, .20, .56, .10, .10, .19, .00, .00, .00, .00, .00, .11, .00, .00, .00, .00, .00, .00, .00, .00, .00, .00, .00, .00, .00, .11, .00, .00, .00, .00, .00, .00, .00, .00, .00},
        {.00, .00, .00, .15, .56, .17, .17, .16, .00, .00, .00, .00, .00, .11, .00, .00, .13, .18, .18, .18, .18, .14, .00, .00, .00, .00, .00, .11, .00, .00, .00, .00, .00, .00, .00, .00, .00},
        {.00, .00, .00, .00, .00, .00, .00, .00, .00, .00, .00, .00, .00, .11, .00, .00, .20, .53, .10, .10, .51, .19, .00, .00, .00, .00, .00, .11, .00, .00, .00, .00, .00, .00, .00, .00, .00},
        {.00, .00, .00, .00, .00, .00, .00, .00, .00, .00, .00, .00, .00, .11, .00, .00, .20, .10, .63, .10, .10, .19, .00, .00, .13, .18, .18, .10, .14, .00, .00, .00, .00, .00, .00, .00, .00},
        {.00, .00, .00, .00, .00, .00, .00, .00, .00, .00, .00, .00, .00, .15, .12, .12, .10, .10, .51, .53, .10, .10, .12, .12, .10, .54, .63, .51, .19, .00, .00, .00, .00, .00, .00, .00, .00},
        {.00, .00, .00, .00, .00, .00, .00, .00, .00, .00, .00, .00, .00, .00, .00, .00, .20, .10, .10, .10, .10, .19, .00, .10, .15, .17, .17, .17, .16, .00, .00, .00, .00, .00, .00, .00, .00},
        {.00, .00, .00, .00, .00, .00, .00, .00, .00, .00, .00, .00, .00, .00, .00, .00, .20, .52, .10, .10, .53, .19, .00, .00, .00, .00, .00, .00, .00, .00, .00, .00, .00, .00, .00, .00, .00},
        {.00, .00, .00, .00, .00, .00, .00, .00, .00, .00, .00, .00, .00, .00, .00, .00, .15, .17, .17, .17, .17, .16, .00, .00, .00, .00, .00, .00, .00, .00, .00, .00, .00, .00, .00, .00, .00},
        {.00, .00, .00, .00, .00, .00, .00, .00, .00, .00, .00, .00, .00, .00, .00, .00, .00, .00, .00, .00, .00, .00, .00, .00, .00, .00, .00, .00, .00, .00, .00, .00, .00, .00, .00, .00, .00},
    };





    private int x;
    private int y;

    public FindPosition(int SX, int SY)
    {
        x = SX;
        y = SY;
    }

    public double CheckPos(int UX, int UY)
    {
        x = UX;
        y =  UY;

        if (!(GameLoop.cave))
        {
            return forest[x][y];
        }
        else if (GameLoop.cave)
        {
            return cave[x][y];
        }
        else 
        {
            Global.view.printText("ERROR ERROR ERROR ERROR");
            Sec.delaySec(5);
            return .319348132;
        }
    }

    public void ChangeId(int UX, int UY, double newId)
    {
        x = UX;
        y =  UY;
        
        if (!(GameLoop.cave))
        {
            forest[x][y] = newId;
        }
        else if (GameLoop.cave)
        {
            cave[x][y] = newId;
        }
    }
    
    public void MoveResponce(int x, int y)
    {
        double tile = 0;
        if (!(GameLoop.cave))
        {
            tile = forest[x][y];
        }
        else if (GameLoop.cave)
        {
            tile = cave[x][y];
        }

        if (!(GameLoop.cave))
        {
            if (tile == .00)
            {
                Global.view.printText("There is a wall there with an inspirational cat poster on it.");
            }
            else if (tile == .10) 
            {
                Global.view.printText("There is nothing around you.");
            } 
            else if (tile == .11)
            {
                Global.view.printText("There are walls to your east and west.");
            }
            else if (tile == .12) 
            {
                Global.view.printText("There are walls to your north and south");
            } 
            else if (tile == .13) 
            {
                Global.view.printText("There are walls north and west of you.");
            } 
            else if (tile == .14) 
            {
                Global.view.printText("There are walls north and east of you.");
            }
            else if (tile == .15) 
            {
                Global.view.printText("There are walls south and west of you.");
            } 
            else if (tile == .16) 
            {
                Global.view.printText("There are walls to your south and east of you.");
            }
            else if (tile == .17) 
            {
                Global.view.printText("There is a wall to the south of you.");
            } 
            else if (tile == .18) 
            {
                Global.view.printText("There is a wall to your north.");
            } 
            else if (tile == .19) 
            {
                Global.view.printText("There is a wall to your east");
            }
            else if (tile == .20) 
            {
                Global.view.printText("There is a wall to your west.");
            }
        }
        else if (GameLoop.cave)
        {
            if (tile == .00)
            {
                Global.view.printText("There is a wall there It very blank, if only it had a poster on it.");
            }
            else if (tile == .10) 
            {
                Global.view.printText("There is nothing around you.");
            } 
            else if (tile == .11)
            {
                Global.view.printText("There are walls west and east of you.");
            }
            else if (tile == .12) 
            {
                Global.view.printText("There are walls north and south of you.");
            } 
            else if (tile == .13) 
            {
                Global.view.printText("There are walls north and west of you.");
            } 
            else if (tile == .14) 
            {
                Global.view.printText("There are walls north and east of you.");
            }
            else if (tile == .15) 
            {
                Global.view.printText("There are walls south and west of you.");
            } 
            else if (tile == .16) 
            {
                Global.view.printText("There walls trees south and east of you.");
            }
            else if (tile == .17) 
            {
                Global.view.printText("There is a wall south of you.");
            } 
            else if (tile == .18) 
            {
                Global.view.printText("There is a wall north of you.");
            } 
            else if (tile == .19) 
            {
                Global.view.printText("There is a wall east of you ");
            }
            else if (tile == .20) 
            {
                Global.view.printText("There is a wall west of you.");
            }
        }
    }

    
            
}

/**
 * {.00, .00, .00, .00, .00, .00, .00, .00, .00, .00, .00, .00, .00, .00, .00, .00, .00, .00, .00, .00, .00, .00, .00, .00, .00, .00, .00, .00, .00, .00, .00, .00, .00, .00, .00, .00, .00},
 * 
 * POSOTIONS 
 * 
 * {.00, .11, .00}
 * {.11, .10, .11} = You can head in any direction
 * {.00, .11, .00} 
 * 
 * 
 * {.00, .11, .00}
 * {.00, .11, .00}, == There are walls to your 
 * {.00, .11, .00}
 * 
 * {.00, .00, .00}
 * {.12, .12, .12} == There are trees north and south of you 
 * {.00, .00, .00},
 * 
 * 
 * 
 * {.00, .00, .00}
 * {.00, .13, .12} = There are trees north and west of you 
 * {.00, .11, .00}
 *
 * {.00, .00, .00}
 * {.12, .14, .00} = There are trees north and east of you 
 * {.00, .11, .00}
 * 
 * 
 * 
 * {.00, .11, .00}
 * {.00, .15, .12} = There are trees south and west of you 
 * {.00, .00, .00}
 * 
 * {.00, .11, .00}
 * {.12, .16, .00} = There are trees south and east of you 
 * {.00, .00, .00}
 * 
 * 
 * 
 * {.00, .11, .00}
 * {.12, .17, .12} = There are trees south of you 
 * {.00, .00, .00}
 * 
 * {.00, .00, .00}
 * {.12, .18, .12} = There are trees north of you 
 * {.00, .11, .00}
 * 
 * 
 * 
 * {.00, .11, .00}
 * {.12, .19, .00} = There are trees east of you 
 * {.00, .11, .00}
 * 
 * {.00, .11, .00}
 * {.00, .20, .12} = There are trees west of you 
 * {.00, .11, .00}
 * 
 * 
 * CHESTS
 * .30 = Stick 
 * .31 = Rusty Dagger 
 * .32 = Cloth Robes 
 * .33 = Health Potions 
 * .34 = Boots 
 * .35 = Wand
 * .36 = Rusty Sword
 * .37 = Old Helmet
 * .38 = Bent leggings 
 * 
 * 
 * CUT SCENE 
 * .40 = 3 Path cut scene and Stick
 * .41 = Cave enter from Forest Non-Boss Side
 * .42 = Cave enter from Forest Boss Side
 * 
 * .43 = Cave leaving from Non-Boss side
 * .44 = Cave Leave from Boss Side
 * 
 * 
 * 
 * .46 = Enter Troll Battle area 
 * .47 = Entering Minotar battle area 
 * 
 * 
 * 
 * 
 * ENEMIES 
 * .51 = Slime
 * .52 = Spiders 
 * .53 = Skeletons
 * .54 = Kobald
 * 
 * 
 * 
 *  
 * .56 = Troll
 * .57 = Boss
 * .
 * 
 * ITEMS
 * .60 = Stick 
 * .61 = Rusty Dagger 
 * .62 = Cloth Robes 
 * .63 = Health Potions 
 * .64 = Boots 
 * .65 = Wand
 * .66 = Rusty Sword 
 * .67 = Old Helmet
 * .68 = Bent leggings 
 * 
 * 
 * Other
 * .99 = Starting position
 * 
 * 
 * 
 * 
 * 
 * 
 * 1 = 28
 * 2 = 26
 * 4 = 22
 * 6 = 16
 * 8 = 8
 * 
 * 
 */